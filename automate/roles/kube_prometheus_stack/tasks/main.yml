---
# - template:
#     src: values.yml.j2
#     dest: "{{ role_path }}/values.yml"

- name: Add chart repo
  kubernetes.core.helm_repository:
    name: prometheus-community
    repo_url: "https://prometheus-community.github.io/helm-charts"

- name: helm chart
  kubernetes.core.helm:
    chart_ref: prometheus-community/kube-prometheus-stack
    chart_version: "{{ prometheus_stack_chart_version }}"
    # chart_ref: "{{ role_path }}/helm-charts/charts/kube-prometheus-stack"
    kubeconfig: "{{ kubeconfig }}"
    release_name: "{{ prometheus_stack_release_name }}"
    release_namespace: "{{ namespace }}"
    create_namespace: true
    update_repo_cache: true
    wait: true
    state: "{{ component_state }}"
    values: "{{ lookup('template', 'values.yml.j2') | from_yaml }}"

- name: Add chart repo
  kubernetes.core.helm_repository:
    name: oauth2-proxy
    repo_url: "https://oauth2-proxy.github.io/manifests"

- name: prometheus oauth proxy chart
  kubernetes.core.helm:
    chart_ref: oauth2-proxy/oauth2-proxy
    chart_version: "{{ auth_chart_version }}"
    kubeconfig: "{{ kubeconfig }}"
    release_name: prometheus
    release_namespace: "{{ namespace }}"
    update_repo_cache: true
    wait: true
    state: "{{ component_state }}"
    values: "{{ lookup('template', 'oauth_promethues_values.yml.j2') | from_yaml }}"

- name: alertmanager oauth proxy chart
  kubernetes.core.helm:
    chart_ref: oauth2-proxy/oauth2-proxy
    chart_version: "{{ auth_chart_version }}"
    kubeconfig: "{{ kubeconfig }}"
    release_name: alertmanager
    release_namespace: "{{ namespace }}"
    update_repo_cache: true
    wait: true
    state: "{{ component_state }}"
    values: "{{ lookup('template', 'oauth_alert_values.yml.j2') | from_yaml }}"

- name: alert manager config secret for admin
  k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: "{{ component_state }}"
    namespace: "{{ namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: alertmanager-config-admin-secret
      type: Opaque
      stringData:
        email-auth-password: "{{ smtp.password }}"
