---
alertmanager:
  enabled: false


grafana:
  adminPassword: "{{ grafana_password }}"
  defaultDashboardsTimezone: "europe/berlin"
  sidecar:
    dashboards:
      searchNamespace: [ "ALL" ]

  resources:
    limits:
      cpu: 500m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 250Mi

  grafana.ini:
    server:
      root_url: https://grafana.{{ cluster_public_domain }}
    auth.generic_oauth:
      enabled: true
      name: {{ keycloak_realm_name }}
      allow_sign_up: true
      # scopes: profile,email,groups
      scopes: profile,email
      client_id: grafana
      client_secret: {{ grafana_client_secret }}
      auth_url: https://keycloak.{{ cluster_public_domain }}/realms/{{ keycloak_realm_name }}/protocol/openid-connect/auth
      token_url: https://keycloak.{{ cluster_public_domain }}/realms/{{ keycloak_realm_name }}/protocol/openid-connect/token
      api_url: https://keycloak.{{ cluster_public_domain }}/realms/{{ keycloak_realm_name }}/protocol/openid-connect/userinfo
      # role_attribute_path: contains(groups[*], 'grafana-admin') && 'Admin' || contains(groups[*], 'grafana-dev') && 'Editor' || 'Viewer'
      role_attribute_path: Admin

  ingress:
    enabled: true

    annotations:
      nginx.org/websocket-services: {{ prometheus_stack_release_name }}-grafana
      kubernetes.io/ingress.class: nginx-public

    hosts:
      - grafana.{{ cluster_public_domain }}

    paths:
      - /

    tls:
      - hosts:
          - grafana.{{ cluster_public_domain }}

prometheusOperator:
  resources:
    limits:
      memory: 500Mi
    requests:
      cpu: 25m
      memory: 100Mi

prometheus:

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx-public

    hosts:
      - prometheus.{{ cluster_public_domain }}

    paths:
      - /

    pathType: Prefix

    tls:
      - hosts:
          - prometheus.{{ cluster_public_domain }}

  prometheusSpec:
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    ruleSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    resources:
      limits:
        memory: 2000Mi
      requests:
        cpu: 100m
        memory: 1000Mi

    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi

coreDns:
  enabled: false

kubeProxy:
  enabled: false

kubeScheduler:
  enabled: false

kubeControllerManager:
  enabled: false

kubeEtcd:
  enabled: false
