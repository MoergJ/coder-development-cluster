---
- name: get arch
  shell: uname -m
  register: arch

- name: set arch var
  set_fact:
    system_arch: "{{ arch.stdout }}"

- name: set arch amd64
  when: system_arch == "x86_64"
  set_fact:
    system_arch: amd64

- name: set arch arm64
  when: system_arch == "aarch64"
  set_fact:
    system_arch: arm64

- name: dirs
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ install_dir }}"
    - "{{ bin_dir }}"

- name: get coder client version {{ coder_version }}
  get_url:
    url: "https://github.com/coder/coder/releases/download/v{{ coder_version }}/coder_{{ coder_version }}_linux_{{ system_arch }}.deb"
    dest: "{{ install_dir }}/coder.deb"

- name: extract binary
  shell: |
    dpkg -x {{ install_dir }}/coder.deb {{ install_dir }}
    mv {{ install_dir }}/usr/bin/coder {{ bin_dir }}/coder
    rm -rf {{ install_dir }}/usr
    rm -rf {{ install_dir }}/DEBIAN

- name: delete install dir
  file:
    path: "{{ install_dir }}"
    state: absent

- name: parse kubeconfig
  set_fact:
    kubeconfig_parsed: "{{ lookup('file', kubeconfig) | from_yaml }}"

- name: set cluster facts
  set_fact:
    coder_k8s_ca_cert: "{{ kubeconfig_parsed.clusters[0].cluster['certificate-authority-data'] }}"
    coder_k8s_server: "{{ kubeconfig_parsed.clusters[0].cluster.server }}"
    coder_k8s_cluster_name: "{{ kubeconfig_parsed.clusters[0].name }}"

- name: setup admin user
  uri:
    url: "https://{{ coder_access_host }}/api/v2/users/first"
    method: POST
    body_format: json
    status_code: [ 200, 201, 409 ]
    body:
      email: "{{ coder_admin_email }}"
      organization: "{{ coder_organization }}"
      password: "{{ coder_admin_password }}"
      username: "{{ coder_admin_username }}"
  register: result
  until: result.status == 200 or result.status == 201 or result.status == 409
  delay: 5
  retries: 5

- name: api login
  uri:
    url: "https://{{ coder_access_host }}/api/v2/users/login"
    method: POST
    body_format: json
    status_code: [ 201 ]
    body:
      email: "{{ coder_admin_email }}"
      password: "{{ coder_admin_password }}"
  register: result
  until: result.status == 201
  delay: 5
  retries: 5

- name: set token fact
  set_fact:
    token: "{{ result.json.session_token }}"

- name: coder login
  command: "{{ bin_dir }}/coder login https://{{ coder_access_host }} --token {{ token }}"
  changed_when: false

- name: devbox workspaces
  include_tasks: "devbox-workspace.yml"
  loop: "{{ coder_devbox_workspace_templates }}"